@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Components.Authorization

<FluentLayout>
    <AuthorizeView>
        <Authorized>
            <FluentHeader>
                BlazorCrudApp
            </FluentHeader>
            <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
                <CascadingValue Value="this">
                    <NavMenu />
                    <FluentBodyContent Class="body-content">
                        <ErrorBoundary>
                            <ChildContent>
                                <div class="content">
                                    @Body
                                </div>
                            </ChildContent>
                            <ErrorContent Context="ex">
                                <div class="blazor-error-boundary">@ex.Message</div>
                            </ErrorContent>
                        </ErrorBoundary>
                    </FluentBodyContent>
                </CascadingValue>
            </FluentStack>
            <FluentFooter>
                <a href="https://www.linkedin.com/in/bautistavirchar" target="_blank">About Us</a>
            </FluentFooter>
            <FluentToastProvider />
            <FluentDialogProvider />
            <FluentTooltipProvider />
            <FluentMessageBarProvider />
            <FluentMenuProvider />
        </Authorized>
    </AuthorizeView>
</FluentLayout>

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@code{
    protected override async Task OnInitializedAsync()
    {
        var auth = await ((AppAuthStateProvider)AuthStateProvider).GetAuthenticationStateAsync();
        if (!auth.User.Identity!.IsAuthenticated)
        {
            var response = await AuthService.ValidateAsync();
            if (response.IsSuccessStatusCode)
            {
                var info = await AuthService.GetInfoAsync();
                if(info is not null)
                {
                    ((AppAuthStateProvider)AuthStateProvider).SetUserInfo(info);
                    return;
                }
            }

            NavigationManager.NavigateTo("/login", true, true);
        }
    }
}